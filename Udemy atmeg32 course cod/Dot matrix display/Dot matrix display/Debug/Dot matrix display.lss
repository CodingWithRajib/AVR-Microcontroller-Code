
Dot matrix display.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000e4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  000000e4  00000158  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000178  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001a8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000685  00000000  00000000  00000204  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000591  00000000  00000000  00000889  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000282  00000000  00000000  00000e1a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  0000109c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000350  00000000  00000000  000010c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000136  00000000  00000000  00001410  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001546  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 ee       	ldi	r30, 0xE4	; 228
  68:	f0 e0       	ldi	r31, 0x00	; 0
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 38       	cpi	r26, 0x80	; 128
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 70 00 	jmp	0xe0	; 0xe0 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
	{0x3F, 0x7F, 0xC0, 0xC0, 0xC0, 0xC0, 0x7F, 0x3F}
	};
char row[8] = {0xFE, 0xFD, 0xFB, 0xF7, 0xEF, 0xDF, 0xDF, 0x7F};
int main(){
	int k = 0;
	DDRC = 0xFF;
  82:	8f ef       	ldi	r24, 0xFF	; 255
  84:	84 bb       	out	0x14, r24	; 20
	DDRD = 0xFF;
  86:	81 bb       	out	0x11, r24	; 17
	{0xFE, 0xC3, 0xC3, 0xFE, 0xFE, 0xC3, 0xC3, 0xFE},
	{0x3F, 0x7F, 0xC0, 0xC0, 0xC0, 0xC0, 0x7F, 0x3F}
	};
char row[8] = {0xFE, 0xFD, 0xFB, 0xF7, 0xEF, 0xDF, 0xDF, 0x7F};
int main(){
	int k = 0;
  88:	c0 e0       	ldi	r28, 0x00	; 0
  8a:	d0 e0       	ldi	r29, 0x00	; 0
  8c:	28 e6       	ldi	r18, 0x68	; 104
  8e:	30 e0       	ldi	r19, 0x00	; 0
  90:	02 c0       	rjmp	.+4      	; 0x96 <main+0x14>
	DDRC = 0xFF;
	DDRD = 0xFF;
	
	while(1){
		if(k>2) k = 0;
  92:	c0 e0       	ldi	r28, 0x00	; 0
  94:	d0 e0       	ldi	r29, 0x00	; 0
  96:	be 01       	movw	r22, r28
  98:	66 0f       	add	r22, r22
  9a:	77 1f       	adc	r23, r23
  9c:	66 0f       	add	r22, r22
  9e:	77 1f       	adc	r23, r23
  a0:	66 0f       	add	r22, r22
  a2:	77 1f       	adc	r23, r23
  a4:	68 59       	subi	r22, 0x98	; 152
  a6:	7f 4f       	sbci	r23, 0xFF	; 255
	{0xFE, 0xC3, 0xC3, 0xFE, 0xFE, 0xC3, 0xC3, 0xFE},
	{0x3F, 0x7F, 0xC0, 0xC0, 0xC0, 0xC0, 0x7F, 0x3F}
	};
char row[8] = {0xFE, 0xFD, 0xFB, 0xF7, 0xEF, 0xDF, 0xDF, 0x7F};
int main(){
	int k = 0;
  a8:	4c e2       	ldi	r20, 0x2C	; 44
  aa:	51 e0       	ldi	r21, 0x01	; 1
  ac:	10 c0       	rjmp	.+32     	; 0xce <main+0x4c>
	while(1){
		if(k>2) k = 0;
		
		for(int i = 0; i<300; i++){
			for(int j = 0; j<8; j++){
				PORTC = row[j];
  ae:	81 91       	ld	r24, Z+
  b0:	85 bb       	out	0x15, r24	; 21
				PORTD = col[k][j];
  b2:	8d 91       	ld	r24, X+
  b4:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b6:	8f ec       	ldi	r24, 0xCF	; 207
  b8:	97 e0       	ldi	r25, 0x07	; 7
  ba:	01 97       	sbiw	r24, 0x01	; 1
  bc:	f1 f7       	brne	.-4      	; 0xba <main+0x38>
  be:	00 c0       	rjmp	.+0      	; 0xc0 <main+0x3e>
  c0:	00 00       	nop
	
	while(1){
		if(k>2) k = 0;
		
		for(int i = 0; i<300; i++){
			for(int j = 0; j<8; j++){
  c2:	e2 17       	cp	r30, r18
  c4:	f3 07       	cpc	r31, r19
  c6:	99 f7       	brne	.-26     	; 0xae <main+0x2c>
  c8:	41 50       	subi	r20, 0x01	; 1
  ca:	51 09       	sbc	r21, r1
	DDRD = 0xFF;
	
	while(1){
		if(k>2) k = 0;
		
		for(int i = 0; i<300; i++){
  cc:	21 f0       	breq	.+8      	; 0xd6 <main+0x54>
  ce:	e0 e6       	ldi	r30, 0x60	; 96
  d0:	f0 e0       	ldi	r31, 0x00	; 0
	{0xFE, 0xC3, 0xC3, 0xFE, 0xFE, 0xC3, 0xC3, 0xFE},
	{0x3F, 0x7F, 0xC0, 0xC0, 0xC0, 0xC0, 0x7F, 0x3F}
	};
char row[8] = {0xFE, 0xFD, 0xFB, 0xF7, 0xEF, 0xDF, 0xDF, 0x7F};
int main(){
	int k = 0;
  d2:	db 01       	movw	r26, r22
  d4:	ec cf       	rjmp	.-40     	; 0xae <main+0x2c>
				PORTC = row[j];
				PORTD = col[k][j];
				_delay_ms(1);
			}
		}
		k++;
  d6:	21 96       	adiw	r28, 0x01	; 1
	int k = 0;
	DDRC = 0xFF;
	DDRD = 0xFF;
	
	while(1){
		if(k>2) k = 0;
  d8:	c3 30       	cpi	r28, 0x03	; 3
  da:	d1 05       	cpc	r29, r1
  dc:	d4 f6       	brge	.-76     	; 0x92 <main+0x10>
  de:	db cf       	rjmp	.-74     	; 0x96 <main+0x14>

000000e0 <_exit>:
  e0:	f8 94       	cli

000000e2 <__stop_program>:
  e2:	ff cf       	rjmp	.-2      	; 0xe2 <__stop_program>
